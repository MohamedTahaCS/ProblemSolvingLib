double ternary_search(double l, double r) 
{
    double eps = 1e-10;              //set the error limit here
    while (r - l > eps) {
        double m1 = l + (r - l) / 3;
        double m2 = r - (r - l) / 3;
        double f1 = f(m1);      //evaluates the function at m1
        double f2 = f(m2);      //evaluates the function at m2
        if (f1 < f2)
            l = m1;
        else
            r = m2;
    }
    return f(l) ;                    //return the maximum of f(x) in [l, r]
}
// int -> return max( f(floor(l)),f(ceil(l)) );

// -------------------------------------------------------------- //
// on int
while(B - A > 4)
{
    int m1 = (A + B) / 2;
    int m2 = (A + B) / 2 + 1;

    if(f(m1) > f(m2))
       A = m1;
    else
       B = m2;
}

ans = inf;

for(int i = A; i <= B; i++)
    ans = min(ans , f(i));