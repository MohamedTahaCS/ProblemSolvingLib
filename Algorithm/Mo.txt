const int blockSize = 450 , N = 2e5 + 1;
struct Query {
    int l , r , idx;
    bool operator < (Query &o) const {
        return make_pair(l / blockSize, r) < make_pair(o.l / blockSize, o.r);
    }
};
 
vi v;
vector<Query> queries;
vector<int> answer;
int cnt = 0 , fr[N];
void add(ll idx) {
    if (fr[v[idx]] == 0) cnt++;
    fr[v[idx]] ++;
}
void remove(ll idx) {
    if (fr[v[idx]] == 1)
        cnt--;
    fr[v[idx]]--;
}
void mo() {
    answer = vi(queries.size());
    sort(queries.begin(), queries.end());
    int currL = 0 , currR = -1;
    for (auto q : queries) {
        while(currL > q.l) currL--, add(currL);
        while(currR < q.r) currR++, add(currR);
        while(currL < q.l) remove(currL), currL++;
        while(currR > q.r) remove(currR), currR--;
        answer[q.idx] = cnt;
    }
}
