struct DSU {
    vector<int> p, sz;
    DSU(int n) {
        p.resize(n + 1);
        sz.resize(n + 1);
        for (int i = 0 ; i <= n ; i++) p[i] = i, sz[i] = 1;
    }

    int find(int a) {
        if (a == p[a]) return a;
        else return p[a] = find(p[a]);
    }

    bool same(int a, int b) {
        return find(a) == find(b);
    }

    int set_sz(int a) {
        return sz[find(a)];
    }

    bool merge(int a, int b) {
        a = find(a);
        b = find(b);
        if (a == b) return false;
        if (sz[a] > sz[b]) swap(a, b);
        p[a] = b;
        sz[b] += sz[a];
        return true;
    }
};